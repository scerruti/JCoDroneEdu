<?xml version="1.0" encoding="UTF-8"?>
<!--
    You can override the receiver logger level at runtime using a system property:
        ./gradlew runTestHarness -Dorg.gradle.jvmargs="-Djcodrone.logging.receiver=DEBUG"
    or when running the jar directly:
        java -Djcodrone.logging.receiver=DEBUG -jar build/libs/JCoDroneEdu-1.0-SNAPSHOT.jar

    The property defaults to INFO to avoid noisy telemetry logs; set to DEBUG when you need packet-level details.
-->
<Configuration status="WARN">
        <Properties>
                <!-- default level for the receiver logger; can be overridden with -Djcodrone.logging.receiver -->
                <Property name="jcodrone.logging.receiver">INFO</Property>
        </Properties>
    <Appenders>
        <!-- Console Appender for development -->
        <Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
        
        <!-- Rolling File Appender for production -->
        <RollingFile name="RollingFileAppender" fileName="logs/codrone-edu.log" 
                     filePattern="logs/codrone-edu-%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
            <DefaultRolloverStrategy max="5"/>
        </RollingFile>
        
        <!-- Student-friendly console output for educational messages -->
        <Console name="StudentConsole" target="SYSTEM_OUT">
            <PatternLayout pattern="[CoDrone EDU] %msg%n"/>
        </Console>
    </Appenders>
    
    <Loggers>
        <!-- Root logger - catches all unspecified loggers -->
        <Root level="INFO">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileAppender"/>
        </Root>
        
        <!-- Specific loggers for different components -->
        
        <!-- Serial communication - more verbose for debugging connection issues -->
        <Logger name="com.otabi.jcodroneedu.SerialPortManager" level="DEBUG" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileAppender"/>
        </Logger>
        
        <!-- Main Drone class - balance of info for students and debug for developers -->
        <Logger name="com.otabi.jcodroneedu.Drone" level="INFO" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileAppender"/>
        </Logger>
        
        <!-- Flight controller - debug level for detailed movement tracking -->
        <Logger name="com.otabi.jcodroneedu.FlightController" level="DEBUG" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileAppender"/>
        </Logger>
        
        <!-- Receiver - can be noisy. Uses a runtime-settable property to control level -->
        <Logger name="com.otabi.jcodroneedu.receiver" level="${jcodrone.logging.receiver}" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileAppender"/>
        </Logger>
        
        <!-- Educational examples - these should remain using System.out -->
        <Logger name="com.otabi.jcodroneedu.example" level="OFF" additivity="false">
            <!-- No appenders - these classes will use System.out directly -->
        </Logger>
        
        <!-- Test classes -->
        <Logger name="com.otabi.jcodroneedu" level="DEBUG" additivity="false">
            <AppenderRef ref="Console"/>
            <AppenderRef ref="RollingFileAppender"/>
        </Logger>
    </Loggers>
</Configuration>
